//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testWCF.ServiceInterne {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicule", Namespace="http://schemas.datacontract.org/2004/07/librairyOutil")]
    [System.SerializableAttribute()]
    public partial class Vehicule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategorieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NbRoueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private testWCF.ServiceInterne.Option[] OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaqueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categorie {
            get {
                return this.CategorieField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorieField, value) != true)) {
                    this.CategorieField = value;
                    this.RaisePropertyChanged("Categorie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marque {
            get {
                return this.MarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.MarqueField, value) != true)) {
                    this.MarqueField = value;
                    this.RaisePropertyChanged("Marque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NbRoue {
            get {
                return this.NbRoueField;
            }
            set {
                if ((this.NbRoueField.Equals(value) != true)) {
                    this.NbRoueField = value;
                    this.RaisePropertyChanged("NbRoue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public testWCF.ServiceInterne.Option[] Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Plaque {
            get {
                return this.PlaqueField;
            }
            set {
                if ((this.PlaqueField.Equals(value) != true)) {
                    this.PlaqueField = value;
                    this.RaisePropertyChanged("Plaque");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Option", Namespace="http://schemas.datacontract.org/2004/07/librairyOutil")]
    [System.SerializableAttribute()]
    public partial class Option : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaracteristiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrixField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caracteristique {
            get {
                return this.CaracteristiqueField;
            }
            set {
                if ((object.ReferenceEquals(this.CaracteristiqueField, value) != true)) {
                    this.CaracteristiqueField = value;
                    this.RaisePropertyChanged("Caracteristique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Prix {
            get {
                return this.PrixField;
            }
            set {
                if ((this.PrixField.Equals(value) != true)) {
                    this.PrixField = value;
                    this.RaisePropertyChanged("Prix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceInterne.IServiceVehicules")]
    public interface IServiceVehicules {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/GetData", ReplyAction="http://tempuri.org/IServiceVehicules/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/GetData", ReplyAction="http://tempuri.org/IServiceVehicules/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceVehicules/GetDataUsingDataContractResponse")]
        testWCF.ServiceInterne.CompositeType GetDataUsingDataContract(testWCF.ServiceInterne.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceVehicules/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<testWCF.ServiceInterne.CompositeType> GetDataUsingDataContractAsync(testWCF.ServiceInterne.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/CreerModel", ReplyAction="http://tempuri.org/IServiceVehicules/CreerModelResponse")]
        bool CreerModel(testWCF.ServiceInterne.Vehicule vehicule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/CreerModel", ReplyAction="http://tempuri.org/IServiceVehicules/CreerModelResponse")]
        System.Threading.Tasks.Task<bool> CreerModelAsync(testWCF.ServiceInterne.Vehicule vehicule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/AjouterOption", ReplyAction="http://tempuri.org/IServiceVehicules/AjouterOptionResponse")]
        string AjouterOption(testWCF.ServiceInterne.Option option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceVehicules/AjouterOption", ReplyAction="http://tempuri.org/IServiceVehicules/AjouterOptionResponse")]
        System.Threading.Tasks.Task<string> AjouterOptionAsync(testWCF.ServiceInterne.Option option);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceVehiculesChannel : testWCF.ServiceInterne.IServiceVehicules, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceVehiculesClient : System.ServiceModel.ClientBase<testWCF.ServiceInterne.IServiceVehicules>, testWCF.ServiceInterne.IServiceVehicules {
        
        public ServiceVehiculesClient() {
        }
        
        public ServiceVehiculesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceVehiculesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceVehiculesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceVehiculesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public testWCF.ServiceInterne.CompositeType GetDataUsingDataContract(testWCF.ServiceInterne.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<testWCF.ServiceInterne.CompositeType> GetDataUsingDataContractAsync(testWCF.ServiceInterne.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool CreerModel(testWCF.ServiceInterne.Vehicule vehicule) {
            return base.Channel.CreerModel(vehicule);
        }
        
        public System.Threading.Tasks.Task<bool> CreerModelAsync(testWCF.ServiceInterne.Vehicule vehicule) {
            return base.Channel.CreerModelAsync(vehicule);
        }
        
        public string AjouterOption(testWCF.ServiceInterne.Option option) {
            return base.Channel.AjouterOption(option);
        }
        
        public System.Threading.Tasks.Task<string> AjouterOptionAsync(testWCF.ServiceInterne.Option option) {
            return base.Channel.AjouterOptionAsync(option);
        }
    }
}
